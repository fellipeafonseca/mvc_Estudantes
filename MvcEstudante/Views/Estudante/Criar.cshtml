@model Model.Estudante

@{
    Layout = null;

   
    }

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Criar</title>
</head>
<body>
    <script src="~/Scripts/jquery-1.8.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    
    @using (Html.BeginForm()) {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
    
        <fieldset>
            <legend>Estudante</legend>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.Nome)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Nome)
                @Html.ValidationMessageFor(model => model.Nome)
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.Senha)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Senha)
                @Html.ValidationMessageFor(model => model.Senha)
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.Email)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Email)
                @Html.ValidationMessageFor(model => model.Email)
            </div>
    
            @*<div class="editor-label">
                @Html.LabelFor(model => model.Codigo)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Codigo)
                @Html.ValidationMessageFor(model => model.Codigo)
            </div>*@
    
         

           





            <div class="editor-label">
                @Html.LabelFor(model => model.Idade)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Idade)
                @Html.ValidationMessageFor(model => model.Idade)
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.Sexo)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Sexo)
                @Html.ValidationMessageFor(model => model.Sexo)
            </div>


         
            <div class="editor-label">
                @Html.LabelFor(model => model.AuxCodigos)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.AuxCodigos)
                @Html.ValidationMessageFor(model => model.AuxCodigos)
            </div>



            @*//Tags Novas de Cursos e turmas*@

  @{      
        try { 
            <div class="editor-label">
                @Html.LabelFor(model => model.Curso)
            </div>
            <div class="editor-field">
                @Html.ListBoxFor(model=>model.Curso, new MultiSelectList(ViewBag.Curso,"Codigo","Codigo"))
            
            </div>
                  }
            catch(Exception ex){
                
                
            }
                  
                  
                  
                  
                        }



@{
        try {


            <div class="editor-label">
                @Html.LabelFor(model => model.Turma)
            </div>
            <div class="editor-field">
                @Html.ListBoxFor(model => model.Turma.Codigo, new SelectList (ViewBag.Turma, "Codigo", "Nome"))

            </div>

}

catch(Exception ex){
    
    
    
    
}

}








            <p>
                <input type="submit" value="Create" />
            </p>
        </fieldset>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
